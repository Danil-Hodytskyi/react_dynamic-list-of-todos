{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","inputQuery","onFilter","onInputQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedUser","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","person","href","email","name","App","setTodos","setSelectedTodo","setInputQuery","setFilter","filterTodos","useCallback","todoList","queryInput","length","includedTitle","toLowerCase","includes","filteredTodos","useMemo","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"mOASaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MAAOC,EADgC,EAChCA,aAAcC,EADkB,EAClBA,eADkB,OAGvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OAFV,UAIE,oBAAIF,UAAU,eAAd,SAA8BE,EAAKC,KAClCD,EAAKE,UAEF,oBAAIJ,UAAU,eAAd,SACE,mBAAGA,UAAU,eAAe,UAAQ,oBAItC,oBAAIA,UAAU,gBAElB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWE,EAAKE,UACZ,mBACA,kBAHN,SAKGF,EAAKG,UAGV,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,kBAAMR,EAAeG,IAJhC,SAME,sBAAMF,UAAU,OAAhB,UACe,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,GACtB,mBAAGH,UAAU,qBACb,mBAAGA,UAAU,uBAhCnBE,EAAKC,aCtBPK,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,OACAC,EAFwB,EAExBA,WACAC,EAHwB,EAGxBA,SACAC,EAJwB,EAIxBA,aAJwB,OAMxB,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRa,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWJ,EAASI,EAAMC,OAAOH,QAH7C,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGb,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACViB,YAAY,YACZJ,MAAOH,EACPI,SAAU,YAAiB,IAAdE,EAAa,EAAbA,OACXJ,EAAaI,EAAOH,UAGxB,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdU,GACC,sBAAMV,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLN,UAAU,SACVO,QAAS,WACPK,EAAa,gBChDdQ,G,MAAmB,kBAC9B,qBAAKpB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASqB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICVMC,EAA6B,SAAC,GAA4B,IAA1B9B,EAAyB,EAAzBA,KAAM+B,EAAmB,EAAnBA,aACjD,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAYA,OAVAC,qBAAU,WDQW,IAACC,ECPhBtC,IDOgBsC,ECNVtC,EAAKsC,ODMwBnB,EAAG,iBAAiBmB,KCLtDZ,MAAK,SAAAa,GACJL,EAAQK,GACRH,GAAa,QAGlB,IAGD,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdqC,EACC,cAAC,EAAD,IAEA,sBAAKrC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKC,MAIjB,wBACEG,KAAK,SACLN,UAAU,SACV,UAAQ,cACRO,QAAS,kBAAM0B,EAAa,YAIhC,sBAAKjC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKG,QAGR,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UAEGE,EAAKE,UACD,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBACJ,OACD,mBAAG0C,KAAI,wBAAYP,QAAZ,IAAYA,OAAZ,EAAYA,EAAMQ,OAAzB,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,oBChDVC,EAAgB,WAC3B,MAA0BX,mBAAiB,IAA3C,mBAAOrC,EAAP,KAAciD,EAAd,KACA,EAAwCZ,mBAAsB,MAA9D,mBAAOpC,EAAP,KAAqBiD,EAArB,KACA,EAAoCb,mBAAS,IAA7C,mBAAOxB,EAAP,KAAmBsC,EAAnB,KACA,EAA4Bd,mBAAS,OAArC,mBAAOzB,EAAP,KAAewC,EAAf,KAEMC,EAAcC,uBAAY,SAACC,EAAkBC,GACjD,OAAKD,EAASE,OAIPF,EAAS3C,QAAO,SAAAP,GACrB,IAAMqD,EAAgBrD,EAAKG,MAAMmD,cAC9BC,SAASJ,EAAWG,eAEvB,OAAQ/C,GACN,IAAK,MACH,OAAO8C,EACT,IAAK,SACH,OAAQrD,EAAKE,WAAamD,EAC5B,IAAK,YACH,OAAOrD,EAAKE,WAAamD,EAC3B,QACE,OAAOrD,MAfJ,OAkBR,CAACO,IAEEiD,EAAgBC,mBAAQ,kBAC5BT,EAAYrD,EAAOa,KAClB,CAACb,EAAOa,EAAYD,IAMvB,OAJA8B,qBAAU,WFzBkBlB,EAAY,UE0B3BO,MAAK,SAAAgC,GAAe,OAAId,EAASc,SAI5C,qCACE,qBAAK5D,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACES,OAAQA,EACRC,WAAYA,EACZC,SAAUsC,EACVrC,aAAcoC,MAIA,IAAjBnD,EAAMyD,QAAgB,cAAC,EAAD,IACtBI,GACC,cAAC,EAAD,CACE7D,MAAO6D,EACP5D,aAAcA,EACdC,eAAgBgD,WAOzBjD,GACC,cAAC,EAAD,CACEI,KAAMJ,EACNmC,aAAcc,QC9ExBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.509e0027.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectedTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, onSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed\n            ? (\n              <td className=\"is-vcentered\">\n                <i className=\"fas fa-check\" data-cy=\"iconCompleted\" />\n              </td>\n            )\n            : (\n              <td className=\"is-vcentred\" />\n            )}\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodo?.id === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  filter: string,\n  inputQuery: string,\n  onFilter: (filter: string) => void,\n  onInputQuery: (inputQuery: string) => void,\n}\n\nexport const TodoFilter = ({\n  filter,\n  inputQuery,\n  onFilter,\n  onInputQuery,\n}: Props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => onFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputQuery}\n        onChange={({ target }) => {\n          onInputQuery(target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {inputQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onInputQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  selectedUser: (todo: null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectedUser }) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(person => {\n          setUser(person);\n          setIsLoading(false);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectedUser(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useState, useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [inputQuery, setInputQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  const filterTodos = useCallback((todoList: Todo[], queryInput: string) => {\n    if (!todoList.length) {\n      return null;\n    }\n\n    return todoList.filter(todo => {\n      const includedTitle = todo.title.toLowerCase()\n        .includes(queryInput.toLowerCase());\n\n      switch (filter) {\n        case 'all':\n          return includedTitle;\n        case 'active':\n          return !todo.completed && includedTitle;\n        case 'completed':\n          return todo.completed && includedTitle;\n        default:\n          return todo;\n      }\n    });\n  }, [filter]);\n\n  const filteredTodos = useMemo(() => (\n    filterTodos(todos, inputQuery)\n  ), [todos, inputQuery, filter]);\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => setTodos(todosFromServer));\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                inputQuery={inputQuery}\n                onFilter={setFilter}\n                onInputQuery={setInputQuery}\n              />\n            </div>\n\n            {todos.length === 0 && <Loader />}\n            {filteredTodos && (\n              <TodoList\n                todos={filteredTodos}\n                selectedTodo={selectedTodo}\n                onSelectedTodo={setSelectedTodo}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          selectedUser={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}